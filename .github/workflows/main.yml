name: Full Server Setup and Deployment
on:
  workflow_dispatch:
env:
  HC_VOLUME: /mnt/HC_Volume_101636316
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Deploy using ssh
        uses: appleboy/ssh-action@master
        env:
          VPS_HOST: ${{ secrets.VPS_HOST }}
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.ERPNEXT_SSH_KEY }}
          port: 22
          envs: VPS_HOST,HC_VOLUME
          script: |
            FOLDERS=(
              "$HC_VOLUME/db-data"
              "$HC_VOLUME/logs"
              "$HC_VOLUME/redis-cache-data"
              "$HC_VOLUME/redis-queue-data"
              "$HC_VOLUME/sites"
            )
            
            for FOLDER in "${FOLDERS[@]}"; do
              if [ ! -d "$FOLDER" ]; then
                mkdir -p "$FOLDER"
                echo "Created folder: $FOLDER"
              else
                echo "Folder already exists: $FOLDER"
              fi
            done
            
            # Install Docker if it's not already installed
            if ! command -v docker &> /dev/null; then
              curl -fsSL https://get.docker.com -o get-docker.sh
              sh get-docker.sh
            fi
            
            # Install Docker Compose if it's not already installed
            if ! command -v docker-compose &> /dev/null; then
              curl -L "https://github.com/docker/compose/releases/download/$(curl -s https://api.github.com/repos/docker/compose/releases/latest | grep -Po '"tag_name": "\K.*?(?=")')/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
              chmod +x /usr/local/bin/docker-compose
            fi
            
            # Install NGINX if it's not already installed
            if ! command -v nginx &> /dev/null; then
              apt-get update && apt-get install -y nginx
            fi
            
            # Clone the repository to /root/NACS_ERP
            if [ ! -d "/root/NACS_ERP" ]; then
              git clone https://github.com/abdullahalhoothy/NACS_ERP.git /root/NACS_ERP
            else
              cd /root/NACS_ERP && git pull
            fi
            
            # Ensure the NGINX configuration directory exists
            NGINX_CONF_DIR="/root/NACS_ERP/nginx"
            if [ ! -d "$NGINX_CONF_DIR" ]; then
              mkdir -p "$NGINX_CONF_DIR"
              echo "Created NGINX configuration directory at $NGINX_CONF_DIR"
            fi
            
            # Create NGINX config file using env variable
            cat > "$NGINX_CONF_DIR/proxy_to_localhost.conf" << EOF
            server {
                listen 80;
                server_name ${{ secrets.VPS_HOST }};
                location / {
                    proxy_pass http://localhost:8080;
                    proxy_set_header Host \$host;
                    proxy_set_header X-Real-IP \$remote_addr;
                    proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
                    proxy_set_header X-Forwarded-Proto \$scheme;
                }
            }
            EOF

            # Check if the NGINX configuration file exists, copy it to sites-available if it does
            NGINX_CONF="$NGINX_CONF_DIR/proxy_to_localhost.conf"
            if [ -f "$NGINX_CONF" ]; then
              cp "$NGINX_CONF" /etc/nginx/sites-available/proxy_to_localhost.conf
              echo "Successfully copied NGINX configuration to /etc/nginx/sites-available/."
            else
              echo "NGINX configuration file not found at $NGINX_CONF."
              exit 1
            fi
            
            # Create symlink if it does not exist
            if [ ! -L "/etc/nginx/sites-enabled/proxy_to_localhost.conf" ]; then
              ln -sf /etc/nginx/sites-available/proxy_to_localhost.conf /etc/nginx/sites-enabled/
              echo "Created symlink for NGINX site."
            else
              echo "Symlink already exists."
            fi
            
            # Reload NGINX configuration
            nginx -s reload
            echo "NGINX reloaded successfully."
            
            # Change directory to project and run Docker Compose
            cd /root/NACS_ERP
            sed -i "s|__HC_VOLUME__|$HC_VOLUME|g" pwd.yml
            sed -i "s|__HC_VOLUME__|$HC_VOLUME|g" compose.yaml
            docker-compose -f pwd.yml down
            docker-compose -f pwd.yml up -d
            echo "Docker Compose started successfully."
